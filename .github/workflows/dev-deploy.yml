name: Development-Deploy

env:
  APP_NAME: edugator-service-api
  S3_BUCKET: edugator-service-api-bucket
  AWS_REGION: us-east-1
  AWS_PLATFORM: Docker
  PIPELINE_ID: ${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}
  APP_PASSWORD: ${{secrets.APP_PASSWORD}}
  ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
  BETA_JUDGE_URI: ${{secrets.BETA_JUDGE_URI}}
  DB_URI: ${{secrets.DB_URI}}
  EDUGATOR_API_PASS: ${{secrets.EDUGATOR_API_PASS}}
  EDUGATOR_API_URL: ${{secrets.EDUGATOR_API_URL}}
  EDUGATOR_API_USER: ${{secrets.EDUGATOR_API_USER}}
  EDUGATOR_AUTH_TOKEN: ${{secrets.EDUGATOR_AUTH_TOKEN}}
  JOB_DEFINITION: ${{secrets.JOB_DEFINITION}}
  JOB_QUEUE: ${{secrets.JOB_QUEUE}}
  JUDGE_URL: ${{secrets.JUDGE_URL}}
  JWT_SECRET: ${{secrets.JWT_SECRET}}
  PROD_JUDGE_URI: ${{secrets.PROD_JUDGE_URI}}
  REGION_AWS: ${{secrets.REGION_AWS}}
  SENDER_EMAIL: ${{secrets.SENDER_EMAIL}}
  UPLOAD_SUBMISSIONS_BUCKET: ${{secrets.UPLOAD_SUBMISSIONS_BUCKET}}
  SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_NAME: ${{ secrets.DB_NAME }}
  TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
  AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
  HOSTNAME: ${{ secrets.HOSTNAME }}
  USER_NAME: ${{ secrets.USER_NAME }}

on:
  pull_request:
    branches:
      - dev

jobs:
  ssh-and-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Create .env file
        run: |
          cat << EOF >> .env
          export NODE_ENV=production
          export DB_URI=${{secrets.DB_URI}}
          export JWT_SECRET=${{secrets.JWT_SECRET}}
          export APP_PASSWORD=${{secrets.APP_PASSWORD}}
          export ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }}
          export BETA_JUDGE_URI=${{secrets.BETA_JUDGE_URI}}
          export EDUGATOR_API_PASS=${{secrets.EDUGATOR_API_PASS}}
          export EDUGATOR_API_URL=${{secrets.EDUGATOR_API_URL}}
          export EDUGATOR_API_USER=${{secrets.EDUGATOR_API_USER}}
          export EDUGATOR_AUTH_TOKEN=${{secrets.EDUGATOR_AUTH_TOKEN}}
          export JOB_DEFINITION=${{secrets.JOB_DEFINITION}}
          export JOB_QUEUE=${{secrets.JOB_QUEUE}}
          export JUDGE_URL=${{secrets.JUDGE_URL}}
          export PROD_JUDGE_URI=${{secrets.PROD_JUDGE_URI}}
          export REGION_AWS=${{secrets.REGION_AWS}}
          export SENDER_EMAIL=${{secrets.SENDER_EMAIL}}
          export UPLOAD_SUBMISSIONS_BUCKET=${{secrets.UPLOAD_SUBMISSIONS_BUCKET}}
          export SECRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export DB_HOST=${{ secrets.DB_HOST }}
          export DB_USER=${{ secrets.DB_USER }}
          export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          export DB_NAME=${{ secrets.DB_NAME }}
          export TEST_DB_NAME=${{ secrets.TEST_DB_NAME }}
          EOF

      - name: Tar the files
        run: |
          tar czf backend.tar.gz src/ package.json package-lock.json tsconfig.json .eslintrc .prettierrc tsconfig.release.json .env package.json package-lock.json
      - name: copy files via ssh password 
        env:
          PRIVATE_KEY: ${{ env.AWS_PRIVATE_KEY  }}
          HOSTNAME : ${{ env.HOSTNAME  }}
          USER_NAME : ${{ env.USER_NAME  }}
        run: |
          echo "${{env.AWS_PRIVATE_KEY}}" > private_key
          chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key backend.tar.gz ${USER_NAME}@${HOSTNAME}:~/
      - name: Deploy in EC2
        env:
          PRIVATE_KEY: ${{ env.AWS_PRIVATE_KEY  }}
          HOSTNAME : ${{ env.HOSTNAME  }}
          USER_NAME : ${{ env.USER_NAME  }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            #Now we have got the access of EC2 and we will start the deploy .
            cd ~/;
            echo "making directory";
            mkdir -p source-code;
            echo " removing in source code";
            rm -rf source-code/*;
            echo " untaring file";
            tar -xvf backend.tar.gz -C source-code/;
            echo " cd into source code";
            cd source-code;
            echo " source env";
            source .env;
            echo "install";
            npm install;
            echo "build";
            npm run build;
            echo "pm2 stop";
            pm2 stop index;
            echo "pm2 delete";
            pm2 delete index;
            echo "pm2 new";
            pm2 start build/src/index.js
          '
