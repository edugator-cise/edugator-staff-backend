name: Continuous Integration

# this env sets all the needed environment variables for the back end
env:
  APP_PASSWORD: ${{secrets.APP_PASSWORD}}
  ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
  BETA_JUDGE_URI: ${{secrets.BETA_JUDGE_URI}}
  DB_URI: ${{secrets.DB_URI}}
  EDUGATOR_API_PASS: ${{secrets.EDUGATOR_API_PASS}}
  EDUGATOR_API_URL: ${{secrets.EDUGATOR_API_URL}}
  EDUGATOR_API_USER: ${{secrets.EDUGATOR_API_USER}}
  EDUGATOR_AUTH_TOKEN: ${{secrets.EDUGATOR_AUTH_TOKEN}}
  JOB_DEFINITION: ${{secrets.JOB_DEFINITION}}
  JOB_QUEUE: ${{secrets.JOB_QUEUE}}
  JUDGE_URL: ${{secrets.JUDGE_URL}}
  JWT_SECRET: ${{secrets.JWT_SECRET}}
  PROD_JUDGE_URI: ${{secrets.PROD_JUDGE_URI}}
  REGION_AWS: ${{secrets.REGION_AWS}}
  SENDER_EMAIL: ${{secrets.SENDER_EMAIL}}
  UPLOAD_SUBMISSIONS_BUCKET: ${{secrets.UPLOAD_SUBMISSIONS_BUCKET}}
  SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

# This action works with pull requests and pushes
on:
  pull_request:
    branches:
      - main
      - release
  workflow_dispatch:
    branches:
      - main
      - release
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install packages
        run: npm install
      - name: Lint check
        run: npm run lint
      - name: Unit tests
        run: npm run test
        env:
          CI: true
          ISOLATE: true
      - name: build
        run: npm run build
        env:
          CI: true
          ISOLATE: true
          NODE_ENV: production
