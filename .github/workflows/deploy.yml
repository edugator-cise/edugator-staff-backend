name: Deploy

env:
  APP_NAME: edugator-service-api
  S3_BUCKET: edugator-service-api-bucket
  AWS_REGION: us-east-1
  AWS_PLATFORM: Docker
  PIPELINE_ID: ${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}
  APP_PASSWORD: ${{secrets.APP_PASSWORD}}
  ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
  BETA_JUDGE_URI: ${{secrets.BETA_JUDGE_URI}}
  DB_URI: ${{secrets.DB_URI}}
  EDUGATOR_API_PASS: ${{secrets.EDUGATOR_API_PASS}}
  EDUGATOR_API_URL: ${{secrets.EDUGATOR_API_URL}}
  EDUGATOR_API_USER: ${{secrets.EDUGATOR_API_USER}}
  EDUGATOR_AUTH_TOKEN: ${{secrets.EDUGATOR_AUTH_TOKEN}}
  JOB_DEFINITION: ${{secrets.JOB_DEFINITION}}
  JOB_QUEUE: ${{secrets.JOB_QUEUE}}
  JUDGE_URL: ${{secrets.JUDGE_URL}}
  JWT_SECRET: ${{secrets.JWT_SECRET}}
  PROD_JUDGE_URI: ${{secrets.PROD_JUDGE_URI}}
  REGION_AWS: ${{secrets.REGION_AWS}}
  SENDER_EMAIL: ${{secrets.SENDER_EMAIL}}
  UPLOAD_SUBMISSIONS_BUCKET: ${{secrets.UPLOAD_SUBMISSIONS_BUCKET}}
  SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

on:
  push:
    branches:
      - main

jobs:
  create_eb_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Create .env file
        run: |
          cat << EOF >> .env
          NODE_ENV=production
          DB_URI=${{secrets.DB_URI}}
          JWT_SECRET=${{secrets.JWT_SECRET}}
          APP_PASSWORD=${{secrets.APP_PASSWORD}}
          ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }}
          BETA_JUDGE_URI=${{secrets.BETA_JUDGE_URI}}
          EDUGATOR_API_PASS=${{secrets.EDUGATOR_API_PASS}}
          EDUGATOR_API_URL=${{secrets.EDUGATOR_API_URL}}
          EDUGATOR_API_USER=${{secrets.EDUGATOR_API_USER}}
          EDUGATOR_AUTH_TOKEN=${{secrets.EDUGATOR_AUTH_TOKEN}}
          JOB_DEFINITION=${{secrets.JOB_DEFINITION}}
          JOB_QUEUE=${{secrets.JOB_QUEUE}}
          JUDGE_URL=${{secrets.JUDGE_URL}}
          PROD_JUDGE_URI=${{secrets.PROD_JUDGE_URI}}
          REGION_AWS=${{secrets.REGION_AWS}}
          SENDER_EMAIL=${{secrets.SENDER_EMAIL}}
          UPLOAD_SUBMISSIONS_BUCKET=${{secrets.UPLOAD_SUBMISSIONS_BUCKET}}
          SECRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
          DATABASE_HOST=${{ secrets.DATABASE_HOST }}
          DATABASE_NAME=${{ secrets.DATABASE_NAME }}
          EOF

      - run: |
          AWS_VERSION_LABEL=${{env.APP_NAME}}-${{env.PIPELINE_ID}}

          echo "Creating Source bundle"
          zip -r ${{env.APP_NAME}}.zip src/ Dockerfile docker-compose.yml .env .dockerignore package.json .eslintrc .eslintignore .prettierrc tsconfig.json tsconfig.release.json jest.config.js package-lock.json
          S3_KEY="$AWS_VERSION_LABEL.zip"

          echo "Uploading Source bundle to s3"
          aws s3 cp ${{env.APP_NAME}}.zip s3://${{env.S3_BUCKET}}/${S3_KEY} --region ${{env.AWS_REGION}}

          echo "Creating Elastic Beanstalk version"
          aws elasticbeanstalk create-application-version --application-name ${{env.APP_NAME}} --version-label $AWS_VERSION_LABEL --region ${{env.AWS_REGION}} --source-bundle S3Bucket=${{env.S3_BUCKET}},S3Key=${S3_KEY} --auto-create-application

  deploy_aws:
    needs: [create_eb_version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11 (needed for eb cli)
        uses: actions/setup-python@v1
        with:
          python-version: '3.11'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-id: ${{ secrets.AWS_ID }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - run: |
          AWS_VERSION_LABEL=${{env.APP_NAME}}-${{env.PIPELINE_ID}}

          echo "Installing Elastic Beanstalk Cli"
          python -m pip install --upgrade pip
          pip install awsebcli --upgrade
          eb --version

          echo "Deploy init"
          eb init -i ${{env.APP_NAME}} -p ${{env.AWS_PLATFORM}} -k ${{secrets.AWS_ID}} --region ${{env.AWS_REGION}}
          eb deploy ${{env.APP_NAME}} --version ${AWS_VERSION_LABEL}
          echo "Deploy finished"
